###############################
#          Main tab           #
###############################
# To be included in the v2g_liberty_dashboard.yaml

- type: grid
  cards:
    - type: markdown
      entities:
        - entity: input_text.charger_state
        - entity: sensor.charger_real_charging_power
      content: >-
        <ha-icon icon="mdi:ev-station"></ha-icon> <div title="Polling
        charger">&nbsp;{{
        states('input_text.poll_refresh_indicator')}}</div>
        <table><tbody><tr><th> {{ states('input_text.charger_state') }}
        </th><td> {{ states('sensor.charger_real_charging_power')
        }}&nbsp;Watt </td></tr></tbody></table>
      layout_options:
        grid_columns: full
        grid_rows: 2
      card_mod:
        style:
          .: |
            ha-card {
              font-size: 123%;
            }
          ha-markdown$: |
            div {
              color: #999999;
              font-size: 70%
              font-weight: bold;
              position: absolute;
              top: 10px;
              right: 15px;
            }
            div:hover:before {
              content: "Receiving data";
              color: var(--success-color);
              font-size: 70%;
            }
            table {
              width: 100%;
              max-width: 100%;
              margin: 8px 0;
            }
            th {
              font-weight: normal;
              text-align: left;
            }
            td {
              text-align: right;
              vertical-align: top;
            }
    - type: conditional
      conditions:
        - entity: input_text.charger_state
          state: 'Connected: controlled by Wallbox App'
        - entity: input_boolean.chargemodeoff
          state: 'off'
      card:
        type: markdown
        layout_options:
          grid_columns: full
        card_mod:
          style: |
            ha-card {
              border-top: none;
              border-top-left-radius: 0;
              border-top-right-radius: 0;
              margin-top: -28px;
            }
        content: >-
          <ha-alert alert-type="warning" title="The charger is controlled
          by Wallbox App">V2G Liberty might not be able to
          charge</ha-alert>

          It seem that there is a charge time-schedule set in the Wallbox
          app. V2G&nbsp;Liberty cannot control the charger now.

          **You can fix this:**

          Remove the time-schedule for charging from the Wallbox app.


    - type: conditional
      conditions:
        - entity: sensor.charger_charger_state
          state: '0'
        - entity: sensor.charger_locked
          state: '1'
      card:
        type: markdown
        layout_options:
          grid_columns: full
        card_mod:
          style: |
            ha-card {
              border-top: none;
              border-top-left-radius: 0;
              border-top-right-radius: 0;
              margin-top: -28px;
            }
        content: >-
          <ha-alert alert-type="warning" title="The charger is locked">V2G
          Liberty cannot charge</ha-alert>

          **You can fix this:**
          
          Unlock the charger manually via the Wallbox app or -if used- the
          RFID card.

    - type: conditional
      conditions:
        - entity: input_boolean.charger_modbus_communication_fault
          state: 'on'
      card:
        type: markdown
        layout_options:
          grid_columns: full
        card_mod:
          style: |
            ha-card {
              border-top: none;
              border-top-left-radius: 0;
              border-top-right-radius: 0;
              margin-top: -28px;
            }
        content: >-
          <ha-alert alert-type="error" title="The charger is not
          responding.">Automatic charging has been stopped.</ha-alert>

          **You can fix this:**

          1. Restart the charger manually<br/>Via the Wallbox app or
          my.wallbox.com<br/>`Settings > Advanced options > Restart`

          2. Wait 5 minutes

          3. Restart V2G Liberty add-on<br/>`V2G Liberty > Settings > ↺
          Restart V2G Liberty` (bottom right)

          4. Wait 2 minutes

          5. Switch charge mode to automatic


- type: grid
  cards:
    - type: markdown
      layout_options:
        grid_columns: 3
      entities:
        - entity: input_number.car_state_of_charge
        - entity: input_number.car_remaining_range
        - entity: input_text.charger_state
      content: |-
        <table><tr>
          <th>{{ states("input_number.car_state_of_charge")|round(0)}}%</th>
          <td>≈ {{ states("input_number.car_remaining_range")|round(0)}} km</td>
        </tr></table> <div><span>&nbsp;</span></div>
      card_mod:
        style:
          .: |
            ha-card {
              padding-top: 0;
              padding-bottom: 0;
            }
            ha-card * {
              filter: grayscale(var(--v2g-state-grayscale));
            }
            :host {
              --v2g-empty-capacity-width: {{ 100 - states('input_number.car_state_of_charge')|int }}%;

              --v2g-dynamic-charge-bar-color: {% if states('input_number.car_state_of_charge')|int < 7 %}
                var(--error-color);
              {% elif states('input_number.car_state_of_charge')|int < 20 %}
                var(--warning-color);
              {% elif states('input_number.car_state_of_charge')|int > 80 %}
                var(--warning-color);
              {% else %}
                var(--success-color);
              {% endif %};

              {% if states('input_text.charger_state') in ['No car connected', 'Error', 'No car connected and charger locked'] %}
              --v2g-state-grayscale: 1;
              {% else %}
              --v2g-state-grayscale: 0;
              {% endif %}
          ha-markdown$: |
            table {
              width: 100%;
              max-width: 100%;
              margin: 8px 0 38px 0 !important;
            }
            th {
              font-weight: normal;
              text-align: left;
              font-size: 250%;
            }
            td {
              text-align: right;
              vertical-align: top;
            }
            div {
              height: 12px;
              width: 100%;
              overflow: hidden;
              line-height: 1px;
              font-size: 10px;
              text-align: right;
              background-color: var(--v2g-dynamic-charge-bar-color);
            }
            div span {
              display: inline-block;
              width: var(--v2g-empty-capacity-width);
              height: 100%;
              background-color: rgba(255, 255, 255, 0.7);
            }

    - type: button
      show_name: true
      show_icon: true
      tap_action:
        action: call-service
        service: script.disconnectnow
        service_data: {}
        target: {}
      entity: ''
      name: Disconnect
      layout_options:
        grid_columns: 1
        grid_rows: 2
      hold_action:
        action: none
      show_state: false
      icon: mdi:power-plug-off-outline
      icon_height: 40px
      #TODO: Disable this button when no car is connected.

- type: grid
  column_span: 1
  cards:
    - type: horizontal-stack
      layout_options:
        grid_columns: full
        grid_rows: 2
      cards:
        - type: button
          name: Automatic
          hold_action:
            action: none
          entity: input_boolean.chargemodeautomatic
          show_state: false
          icon_height: 40px
        - type: button
          name: Charge Now
          icon: mdi:battery-alert
          hold_action:
            action: none
          entity: input_boolean.chargemodemaxboostnow
          show_state: false
          icon_height: 40px
        - type: button
          name: Pause
          icon: mdi:pause-box-outline
          hold_action:
            action: none
          entity: input_boolean.chargemodeoff
          icon_height: 40px
          show_state: false
          card_mod:
            style: |
              :host(:hover)::before {
                content: "Pause scheduled charging and give control to the charger. \A Want to stop V2G Liberty completely? Use the link on the settings tab in the top bar.";
                text-align: left;
                white-space: pre-wrap;
                font-size: 80%;
                color: var(--primary-text-color);
                position: absolute !important;
                width: calc(66% - 10px);
                left: 10px;
                top: 10px;
                background-color: var(--primary-background-color);
                border: 1px solid var(--input-idle-line-color);
                border-radius: 8px;
                padding: 8px 16px;
                z-index: 110;
              }
      square: false
    - type: conditional
      conditions:
        - entity: input_text.charger_state
          state: No car connected
        - entity: input_boolean.chargemodemaxboostnow
          state: 'on'
      card:
        type: markdown
        content: >-
          <ha-alert alert-type="warning" title="No car is connected">To
          start Max-charge-now, please connect the car to the
          charger.</ha-alert>
        layout_options:
          grid_columns: full
- type: grid
  cards:
    - type: custom:apexcharts-card
      experimental:
        color_threshold: true
        hidden_by_default: true
        disable_config_validation: true
      layout_options:
        grid_columns: full
        grid_rows: 8
      apex_config:
        legend:
          show: true
          horizontalAlign: left
          onItemHover:
            highlightDataSeries: false
          itemMargin:
            vertical: 15
            horizontal: 8
          inverseOrder: true
          tooltip:
            enabled: true
            shared: true
            followCursor: false
            intersect: false
            inverseOrder: false
            hideEmptySeries: true
        grid:
          show: true,
          borderColor: '#cfcfcf'
          strokeDashArray: 1
          position: back
        chart:
          height: 400px
          zoom:
            enabled: true
          animations:
            enabled: false
      graph_span: 24h
      span:
        start: hour
        offset: '-4h'
      now:
        show: true
      header:
        show: true
        title: Car State of Charge (%)
      series:
        - entity: input_text.calender_item_in_chart
          show:
            legend_value: false
          type: area
          color: var(--dark-primary-color)
          opacity: 0.2
          stroke_width: 0
          extend_to: false
          yaxis_id: SoC
          data_generator: |
            return entity.attributes.records.map((record, index) => {
              return [new Date(record.time).getTime(), record.soc];
            });
        - entity: input_text.soc_prognosis_max_charge_now
          show:
            legend_value: false
          type: line
          color: '#fea602'
          stroke_width: 2
          stroke_dash: 2
          curve: straight
          extend_to: false
          yaxis_id: SoC
          data_generator: |
            return entity.attributes.records.map((record, index) => {
              return [new Date(record.time).getTime(), record.soc];
            });
        - entity: input_text.soc_prognosis_boost
          show:
            legend_value: false
          type: line
          curve: straight
          color: '#e48628'
          stroke_width: 2
          extend_to: false
          yaxis_id: SoC
          data_generator: |
            return entity.attributes.records.map((record, index) => {
              return [new Date(record.time).getTime(), record.soc];
            });
        - entity: input_text.co2_emissions
          show:
            hidden_by_default: true
            legend_value: false
          transform: return x / 6;
          color: '#ADD6B2'
          opacity: 1
          extend_to: false
          stroke_width: 1
          curve: stepline
          yaxis_id: ElectricityPriceAxis
          data_generator: |
            return entity.attributes.records.map((record, index) => {
              return [new Date(record.time).getTime(), record.emission];
            });
          type: line
        - entity: input_text.production_prices
          show:
            hidden_by_default: true
            legend_value: false
          color_threshold:
            - value: 0
              color: red
              opacity: 0.9
            - value: 1
              color: '#FBCCD6'
              opacity: 1
          color: '#FBCCD6'
          opacity: 1
          extend_to: false
          stroke_width: 1
          curve: stepline
          yaxis_id: ElectricityPriceAxis
          data_generator: |
            return entity.attributes.records.map((record, index) => {
              return [new Date(record.time).getTime(), record.price];
            });
          type: line
        - entity: input_text.consumption_prices
          show:
            legend_value: false
          color_threshold:
            - value: -100
              color: green
              opacity: 0.9
            - value: 0
              color: '#C393C5'
              opacity: 1
          color: '#C393C5'
          opacity: 1
          extend_to: false
          stroke_width: 1
          curve: stepline
          yaxis_id: ElectricityPriceAxis
          data_generator: |
            return entity.attributes.records.map((record, index) => {
              return [new Date(record.time).getTime(), record.price];
            });
          type: line
        - entity: input_text.soc_prognosis
          show:
            legend_value: false
          type: line
          color: '#fea602'
          stroke_width: 2
          extend_to: false
          yaxis_id: SoC
          data_generator: |
            return entity.attributes.records.map((record, index) => {
              return [new Date(record.time).getTime(), record.soc];
            });
        - entity: input_number.car_state_of_charge
          show:
            legend_value: false
          color: '#009be5'
          stroke_width: 2
          type: line
          extend_to: now
          yaxis_id: SoC
      yaxis:
        - id: SoC
          min: 0
          max: 100
          decimals: 0
          apex_config:
            tickAmount: 5
        - id: ElectricityPriceAxis
          decimals: 0
          apex_config:
            tickAmount: 5
            showAlways: true
            forceNiceScale: true
          opposite: true
          min: '|-2|'
          max: '|+2|'
      card_mod:
        debug: true
        style: |
          ha-card:before {
            content: "¢ent/kWh";
            font-size: 90%;
            color: #797979;
            display: block;
            position: relative;
            width: calc(100% - 20px);
            text-align: right;
            top: 50px;
          }
          div[seriesname="Calendarxitemxinxchart"],
          div[seriesname="SoCxBoost"],
          div[seriesname="SoCxMaxxChargexNow"] {
            display: none;
          }
    - type: markdown
      layout_options:
        grid_columns: full
      entities:
        - entity: input_text.optimisation_mode
        - entity: input_text.utility_display_name
      content: >-
        <table><tbody><tr><th>Optimised on 
        <span>{{states("input_text.optimisation_mode")}}</span> </th><td>
        {{states("input_text.utility_display_name")}}
        </td></tr></tbody></table>
      card_mod:
        style:
          .: |
            ha-card {
              margin-top: -64px;
              border-top: none;
              border-top-left-radius: 0;
              border-top-right-radius: 0;
            }
          ha-markdown$: |
            table {
              width: 100%;
              max-width: 100%;
            }
            th {
              font-weight: normal;
              text-align: left;
            }
            td {
              text-align: right;
              vertical-align: top;
            }
            span {
              font-weight: bold;
            }
    - type: conditional
      conditions:
        - entity: input_boolean.error_no_new_schedule_available
          state: 'on'
      layout_options:
        grid_columns: full
      card:
        type: markdown
        layout_options:
          grid_columns: full
        content: >-
          <ha-alert alert-type="warning" title="No new schedules
          available"> The current schedule wil remain active.<br/> Usually
          this problem is solved automatically within an hour.<br/> If the
          schedule does not fit your needs, consider charging
          manually.</ha-alert>
        card_mod:
          style: |
            ha-card {
              border-top: none;
              border-top-left-radius: 0;
              border-top-right-radius: 0;
              margin-top: -22px;
            }
    - type: conditional
      conditions:
        - entity: input_boolean.error_epex_prices_cannot_be_retrieved
          state: 'on'
      layout_options:
        grid_columns: full
      card:
        type: markdown
        layout_options:
          grid_columns: full
        content: >-
          <ha-alert alert-type="warning">Price and/or emissions data incomplete.</ha-alert>
        card_mod:
          style: |
            ha-card {
              border-top: none;
              border-top-left-radius: 0;
              border-top-right-radius: 0;
              margin-top: -22px;
            }
  column_span: 2

- type: grid
  cards:
    - type: markdown
      title: Reservations
      entities:
        - input_text.input_text.calendar_events
      content: >-
        <div>Target SoC is read from the event summary, if not found, 100%
        is used.</div>  {% if state_attr('input_text.calendar_events',
        'v2g_ui_event_calendar') == None %} Calendar configuration seems
        invalid, please check settings. {% else %} {% if
        states.input_text.calendar_events.attributes.v2g_ui_event_calendar
        == [] %} No reservations in the next seven days. {% else %}
        <table>{% for cal_day in
        states.input_text.calendar_events.attributes.v2g_ui_event_calendar
        %} <thead> <tr> <th colspan=4>{{ as_timestamp(cal_day.day) |
        timestamp_custom("%A") }}</th> <td>{{ as_timestamp(cal_day.day) |
        timestamp_custom("%Y-%m-%d") }}</td> </tr> </thead>{% for event in
        cal_day.events %}<tbody><tr> {% if event.dismissed == true %}
        <td><s>{{ as_timestamp(event.start) | timestamp_custom("%H:%M")
        }}</s></td><td><span>-</span></td> <td><s>{{
        as_timestamp(event.end) | timestamp_custom("%H:%M") }}</s></td>
        <td></td> <th><s>{{ event.summary }}</s><b>(dismissed by user)</b>
        {% if event.description != "" %}<s><span>{{ event.description
        }}</span></s>{% endif %}</th> {% else %} <td>{{
        as_timestamp(event.start) | timestamp_custom("%H:%M")
        }}</td><td><span>-</span></td> <td>{{ as_timestamp(event.end) |
        timestamp_custom("%H:%M") }}</td> <td><strong>●</strong></td>
        <th>{{ event.summary }}{% if event.description != "" %}<span>{{
        event.description }}</span>{% endif %}</th> {% endif %} </tr>{%
        endfor %} </tbody>{% endfor %}</table>{% endif %}{% endif %}
      card_mod:
        style:
          ha-markdown$: |
            div {
              margin-top: 0px !important;
              margin-bottom: 24px !important;
              font-size: 90%;
              color: var(--secondary-text-color);
            }
            table {
              width: 100%;
              max-width: 100%;
            }
            thead * {
              vertical-align: top;
              font-weight: 400 !important;
              font-size: 16px;
              padding: 8px 0 12px 0;
            }
            td span {
              padding: 0 6px;
            }
            td strong {
              padding-left: 16px;
              line-height: 0.6;
              font-size: 175%;
              color: var(--dark-primary-color);
              opacity: 0.3;
            }
            thead th {
              text-align: left;
            }
            thead td {
              text-align: right;
            }
            thead td, thead th {
              border-top: 1px solid var(--divider-color);
            }
            tbody s {
              color:  var(--secondary-text-color);
            }
            tbody * {
              vertical-align: top;
              text-align: left;
              font-weight: 400 !important;
              font-size: 14px;
              padding: 0 0 12px 0;
            }
            tbody th {
              width: 90%;
              padding-left: 16px;
            }
            tbody th span{
              font-size: 90%;
              color: #797979;
              display: block;
              padding: 4px 0 0 0;
            }

    - type: markdown
      layout_options:
        grid_columns: full
      entities:
        - entity: input_number.total_charging_cost_last_7_days
        - entity: input_number.net_energy_last_7_days
        - entity: input_text.total_charge_time_last_7_days
        - entity: input_number.total_emissions_last_7_days
        - entity: input_number.total_charged_energy_last_7_days
        - entity: input_text.total_discharge_time_last_7_days
        - entity: input_number.total_saved_emissions_last_7_days
        - entity: input_number.total_discharged_energy_last_7_days
        - entity: input_number.net_emissions_last_7_days
        - entity: input_number.net_energy_last_7_days
      content: !include v2g_liberty_ui_module_stats.yaml
      card_mod:
        style: !include table_style.yaml

    - type: markdown
      layout_options:
        grid_columns: full
      entities:
        - input_text.v2g_liberty_version
      content: >-
        Version <span>{{ state_attr("update.v2g_liberty_update",
        "installed_version") }}</span>
      card_mod:
        style:
          .: |
            ha-card {
              border: none;
              color: #797979;
              background-color: transparent;
              text-align: right;
            }
          ha-markdown$: |
            span {
              font-weight: bold;
            }
