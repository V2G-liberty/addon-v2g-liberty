################################################################################
#                                                                              #
#    V2G Liberty Package                                                       #
#    Contains all entities needed for the V2G Liberty software to work         #
#                                                                              #
################################################################################

lovelace:
  mode: storage
  dashboards:
    lovelace-yaml:
      mode: yaml
      filename: packages/v2g_liberty/v2g_liberty_dashboard.yaml
      title: V2G Liberty
      icon: mdi:car-electric
      show_in_sidebar: true
      require_admin: false

frontend:
  extra_module_url:
    - /local/v2g_liberty/lovelace-card-mod/card-mod.js
    - /local/v2g_liberty/apexcharts-card/apexcharts-card-v2-1-2.js
    - /local/v2g_liberty/v2g-liberty-cards/v2g-liberty-cards.js

input_select:
  gb_dno_region:
    name: Great Britain DNO region
    icon: mdi:home-map-marker
    options:
      - Eastern England
      - East Midlands
      - London
      - Merseyside and Northern Wales
      - West Midlands
      - North Eastern England
      - North Western England
      - Southern England
      - South Eastern England
      - Southern Wales
      - South Western England
      - Yorkshire
      - Southern Scotland
      - Northern Scotland

  # Options will be set through v2g_globals
  admin_mobile_platform:
    name: The operation system of the mobile of the administrator
    icon: mdi:cellphone-cog
    options:
      - android
      - ios

  electricity_provider:
    icon: mdi:office-building
    options:
      - nl_generic
      - nl_anwb_energie
      - nl_greenchoice
      - nl_next_energy
      - nl_tibber
      - no_generic
      - gb_octopus_energy
      - au_amber_electric

  optimisation_mode:
    icon: mdi:chart-timeline-variant-shimmer
    options:
      - price
      - emission

  charge_mode:
    name: Charge mode
    options:
      - Automatic
      - Max boost now
      - Stop
    # "Stop" used to be "Off" but this triggers HA to see it as False..
    icon: mdi:battery-charging-medium

input_boolean:
  quasar_loadbalancer_no_total_power:
    name: Quasar loadbalancer no total power

  admin_settings_initialised:
    name: Administrator settings are initialised

  calendar_settings_initialised:
    name: Car reservation calendar settings are initialised

  charger_settings_initialised:
    name: Charger settings are initialised

  electricity_contract_settings_initialised:
    name: Electricity contract settings are initialised

  schedule_settings_initialised:
    name: Schedule settings are initialised

  # Settings related entities
  use_reduced_max_charge_power:
    name: Change default (dis-)charge power
    icon: mdi:square-edit-outline

  fm_show_option_to_change_url:
    name: Change default server
  use_vat_and_markup:
    name: Use VAT and markup to calculate price in HA

  # Used for signaling in the UI that the EPEX prices temporarily cannot be retrieved from FM
  error_epex_prices_cannot_be_retrieved:
    name: "Error: EPEX prices cannot be retrieved"

  # Used for signaling in the UI there are no new (valid) schedules available.
  # E..g. no communication with FM, timeouts, flatline, etc.
  error_no_new_schedule_available:
    name: "Error: No new schedule available"

  # Used for signaling in the UI that Modbus communication with the charger is no longer possible
  # This usually indicates the Modbus Module in the charger has crashed and the charger should be restarted externally.
  charger_modbus_communication_fault:
    name: "Error: charger Modbus communication fault"

  #Three booleans to mimic a radio button group for the charge mode the user can set in the UI
  chargemodeautomatic:
    name: ChargeModeAutomatic
    icon: mdi:battery-charging-80

  chargemodemaxboostnow:
    name: ChargeModeMaxBoostNow
    icon: mdi:battery-alert

  chargemodeoff:
    name: ChargeModeOff
    icon: mdi:battery-off

input_number:
  energy_price_vat:
    name: VAT
    min: 0
    max: 50
    step: 1
    mode: box
    unit_of_measurement: "%"
    icon: mdi:close

  energy_price_markup_per_kwh:
    name: Markup/kWh
    min: 0
    max: 200
    step: 0.001
    mode: box
    unit_of_measurement: ct/kWh
    icon: mdi:plus

  charger_plus_car_roundtrip_efficiency:
    name: Roundtrip efficiency of charger and car
    min: 50
    max: 100
    step: 1
    icon: mdi:arrow-u-left-bottom
    mode: box
    unit_of_measurement: "%"

  charger_max_charging_power:
    name: Max charging power
    min: 1380
    max: 25000
    step: 1
    icon: mdi:car-arrow-left
    mode: box
    unit_of_measurement: W

  charger_max_discharging_power:
    name: " "
    min: 1380
    max: 25000
    step: 1
    icon: mdi:car-arrow-right
    mode: box
    unit_of_measurement: W

  charger_port:
    name: "Charger port"
    min: 1
    max: 65535
    step: 1
    icon: mdi:numeric
    mode: box
    unit_of_measurement: " "

  car_max_capacity_in_kwh:
    name: Car battery max. capacity
    min: 10
    max: 200
    step: 1
    icon: mdi:battery-high
    mode: box
    unit_of_measurement: kWh

  car_consumption_wh_per_km:
    name: Car energy consumption
    icon: mdi:gauge-low
    min: 100
    max: 400
    unit_of_measurement: Wh/km
    step: 1.0
    mode: box

  car_min_soc_in_percent:
    name: Car battery min. soc
    min: 10
    max: 55
    step: 1
    icon: mdi:chart-bell-curve-cumulative
    mode: box
    unit_of_measurement: "%"

  car_max_soc_in_percent:
    name: Car battery max. soc
    min: 60
    max: 95
    step: 1
    icon: mdi:chart-sankey
    mode: box
    unit_of_measurement: "%"

  allowed_duration_above_max_soc_in_hrs:
    name: Allowed duration above max soc
    min: 1
    max: 12
    step: 1
    icon: mdi:timer-lock-outline
    mode: box
    unit_of_measurement: hrs

template:
  - binary_sensor:
      - name: is_charge_power_different_from_schedule
        device_class: problem
        state: >
          {{ ((states('sensor.current_scheduled_charging_power')|int - states('sensor.charger_real_charging_power')|int)|abs) > 500 }}
        availability: >
          {{ has_value('sensor.current_scheduled_charging_power') and has_value('sensor.charger_real_charging_power') }}

      # The following sensors are to be set from the Python code.
      - name: is_car_connected
        # Is the charger plug inserted into the car socket
        # Should be 'unavailable' if charger is in error
        device_class: plug
        state: "{{ None }}" # Dummy
        availability: "{{ states('binary_sensor.is_car_connected_availability') }}"

      - name: is_car_connected_availability
        # Helper sensor to be able to set the availability of the original sensor
        state: "{{ False }}"  # Sets initial value to 'unavailable'

sensor:
  - platform: template
    # The platform: number would have been more suitable but HA does not support that
    # The platform: template is not a prefect match but the only thing that could be hacked
    # Other properties like state_class: measurement, native_value: int are not allowed
    # for a template sensor.
    # These are all to be set from Python code.
    sensors:

      # Only applicable for the situation where the loadbalancer is active for the Quasar 1 charger.
      quasar_loadbalancer_limit:
        friendly_name: Quasar loadbalancer limit
        device_class: power
        unit_of_measurement: W
        value_template: "{{ None }}"  # Default value 0 will be set at init to indicate the loadbalancer is active
        icon_template: mdi:arrow-collapse-vertical

      car_state_of_charge:
        friendly_name: Car state of charge
        device_class: battery
        unit_of_measurement: "%"
        value_template: "{{ None }}"  # Dummy

      charger_real_charging_power:
        friendly_name: Charger real charging power
        device_class: power
        unit_of_measurement: W
        value_template: "{{ None }}"  # Dummy

      # Intended for checks to see if the actual power matches this setting
      current_scheduled_charging_power:
        friendly_name: Current scheduled charging power
        device_class: power
        unit_of_measurement: W
        value_template: "{{ None }}"  # Dummy

      car_remaining_range:
        friendly_name: Car Remaining Range
        device_class: distance
        unit_of_measurement: km
        value_template: "{{ None }}"  # Dummy

      # Used for stats in UI.
      total_charging_cost_last_7_days:
        friendly_name: Total charging costs last 7 days
        device_class: monetary
        unit_of_measurement: â‚¬
        value_template: "{{ None }}"  # Dummy

      total_charged_energy_last_7_days:
        friendly_name: Total charged energy last 7 days
        device_class: energy_storage
        unit_of_measurement: kWh
        value_template: "{{ None }}"  # Dummy

      total_discharged_energy_last_7_days:
        friendly_name: Total discharged energy last 7 days
        device_class: energy_storage
        unit_of_measurement: kWh
        value_template: "{{ None }}"  # Dummy

      net_energy_last_7_days:
        friendly_name: Total net energy last 7 days
        device_class: energy_storage
        unit_of_measurement: kWh
        value_template: "{{ None }}"  # Dummy

      total_saved_emissions_last_7_days:
        friendly_name: Total saved emissions last 7 days
        device_class: weight
        unit_of_measurement: kg  # CO2 that is...
        value_template: "{{ None }}"  # Dummy

      total_emissions_last_7_days:
        friendly_name: Total emissions last 7 days
        device_class: weight
        unit_of_measurement: kg  # CO2 that is...
        value_template: "{{ None }}"  # Dummy

      net_emissions_last_7_days:
        friendly_name: Net emissions last 7 days
        device_class: weight
        unit_of_measurement: kg  # CO2 that is...
        value_template: "{{ None }}"  # Dummy

      total_discharge_time_last_7_days:
        friendly_name: Total discharge time in last 7 days
        value_template: ""

      total_charge_time_last_7_days:
        friendly_name: Total charge time in last 7 days
        value_template: ""

      calendar_account_connection_status:
        friendly_name: Calendar account connection status
        value_template: ""

      # Used to show a user understandable version of the states in the UI.
      # E.g. "Charging", "No car connected", etc.
      charger_state_text:
        friendly_name: Charger state
        value_template: ""

      charger_state_int:
        friendly_name: Charger state int value
        value_template: "{{ None }}"  # Dummy

      charger_connection_status:
        friendly_name: Calendar account connection status
        value_template: ""

      poll_refresh_indicator:
        friendly_name: This changes every time the EVSE gets polled (if active, 5 to 15 sec.)
        value_template: " "

      # Util entity that holds the events to show in UI in an attribute 'events'
      calendar_events:
        value_template: ""

      # This is not a setting but is read from the charger and is
      # an upper limit for max_(dis-)charging_power
      charger_max_available_power:
        value_template: "??"

      fm_connection_status:
        friendly_name: FlexMeasures connection status
        value_template: ""

      # Helper for setting text in dashboard.
      utility_display_name:
        friendly_name: Utility display name
        value_template: ""

      # Helper, for setting text in dashboard.
      last_reboot_at:
        friendly_name: When was V2G Liberty add-on last restarted
        value_template: ""

      # Used to store the (serialised) charge schedule HA receives from the
      # backend FM, not used in UI.
      charge_schedule:
        friendly_name: Charge schedule chart data
        value_template: ""

      # Used to store the (serialized) list of dynamic consumption prices that is fetched by
      # get_fm_data code from FM. This then is shown in the UI in the graph.
      consumption_prices:
        friendly_name: Buy price chart data
        value_template: ""

      # Used to store the (serialized) list of dynamic consumption prices that is fetched by
      # get_fm_data code from FM. This then is shown in the UI in the graph.
      production_prices:
        friendly_name: Sell price chart data
        value_template: ""

      # Used to store the (serialized) list of hourly CO2 emissions that is fetched by
      # get_fm_data code from FM daily. This then is shown in the UI in the graph.
      co2_emissions:
        friendly_name: Emissions chart data
        value_template: ""

      # Based on the current SoC and the schedule a prognosis (list of values) is
      # calculated and this (serialised list) is stored in this variable. This is Used
      # in the graph, shown as yellow prognosis line.
      soc_prognosis:
        friendly_name: SoC schedule chart data
        value_template: ""

      # Based on the current SoC and max boost function (when SoC is below minimum).
      # This contains two values current SoC and min. SoC at expected time.
      # This is shown in the graph as a red prognosis line.
      soc_prognosis_boost:
        friendly_name: SoC Boost chart data
        value_template: ""

      # Based on the current SoC and Max Charge Now function (from the Charge Mode buttons).
      # This contains two values current SoC and 100%. SoC at expected time.
      # This is shown in the graph as a dashed prognosis line.
      soc_prognosis_max_charge_now:
        friendly_name: SoC Max Charge Now chart data
        value_template: ""

      # Forms bar representing the duration of the calendar item at
      # the desired %.
      calender_item_in_chart:
        friendly_name: Calendar item in chart
        value_template: ""

input_text:
  car_calendar_source:
    name: Type of source for car calendar
    icon: mdi:sprout
    # options: "remoteCaldav", "localIntegration".

  # Used when the car calendar is provided by a local integration (e.g. Google Calendar)
  integration_calendar_entity_name:
    name: Calendar integration
    icon: mdi:calendar-edit-outline

  car_calendar_name:
    name: Car reservation calendar
    icon: mdi:car-info

  admin_mobile_name:
    name: The mobile of the administrator
    icon: mdi:shield-account

  #############  calendar related entities #############
  calendar_account_init_url:
    name: Calendar host URL
    icon: mdi:web
  calendar_account_username:
    name: Username
    icon: mdi:account
  calendar_account_password:
    name: Password
    icon: mdi:form-textbox-password
    mode: password

  #############  charger related entities #############
  charger_host_url:
    name: Charger host URL
    icon: mdi:lan-pending

  #############  flexmeasures related entities #############
  fm_account_username:
    icon: mdi:account
    name: Username (email address)
  fm_account_password:
    icon: mdi:form-textbox-password
    name: Password
    mode: password
  fm_host_url:
    icon: mdi:server-network-outline
    name: URL
  fm_asset:
    name: FlexMeasures asset
    icon: mdi:format-list-bulleted-type

  ###################################################################
  #        self_provided settings related to au_amber_electric      #
  ###################################################################

  own_production_price_entity_id:
    icon: mdi:transmission-tower-import
    mode: text
    name: Source entity_id for self_provided production price
  own_consumption_price_entity_id:
    icon: mdi:transmission-tower-export
    mode: text
    name: Source entity_id for self_provided consumption price

  ###################################################################
  #        self_provided settings related to gb_octopus_energy      #
  ###################################################################

  octopus_import_code:
    icon: mdi:transmission-tower-import
    mode: text
    name: Octopus Electric import code

  octopus_export_code:
    icon: mdi:transmission-tower-export
    mode: text
    name: Octopus Electric export code

  octopus_region:
    icon: mdi:home-map-marker
    mode: text
    name: Octopus Electric region
    min: 1
    max: 1


script:
  restart_ha:
    alias: RestartHomeAssistant
    sequence:
      - event: RESTART_HA
        event_data: {}
    mode: single

  reset_to_factory_defaults:
    alias: ResetToFactoryDefaults
    sequence:
      - event: RESET_TO_FACTORY_DEFAULTS
        event_data: {}
    mode: single

  disconnectnow:
    alias: DisconnectNow
    sequence:
      - event: DISCONNECT_CHARGER
        event_data: {}
    mode: single

  call_service_with_response:
    description: Calls a service and returns its response to AppDaemon
    fields:
      call_id:
        name: Call id
        default: 1
        description: An id to uniquely identify the call
        required: True
        selector:
          text:
      service_name:
        name: Service name
        default: domain.some_service
        description: The service to call
        required: True
        selector:
          text:
      service_data:
        name: Service data
        default: {}
        description: Data to pass to the service
        required: True
        selector:
          object:
    sequence:
      - service: "{{ service_name }}"
        data: "{{ service_data }}"
        response_variable: response
      - event: call_service_with_response.finished # event name cannot be templated unfortunately
        event_data:
          call_id: "{{ call_id }}"
          response: "{{ response }}"


automation:
  - id: "1633010017995"
    alias: Chargemode to Automatic
    description: 'A bit of a hack because HA does not provide radiobuttons

      The values of the helper "input_select.charge_mode" are to be reflected in the
      UI as 3 (radio)buttons.

      Te give these buttons a on/off state for each of them a toggle helper is used.

      When a toggle-button is clicked an (these) automations receives the trigger selects
      the corresponding item in the input_select and switches the other toggles to off.

      If these seem not to work, check in the settings > automations to see if they are active.'
    triggers:
      - trigger: state
        entity_id:
          - input_boolean.chargemodeautomatic
        from: "off"
        to: "on"
    conditions: []
    actions:
      - action: input_select.select_option
        metadata: {}
        data:
          option: Automatic
        target:
          entity_id: input_select.charge_mode
      - action: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id:
            - input_boolean.chargemodemaxboostnow
            - input_boolean.chargemodeoff
    mode: single


  - id: "1633010167089"
    alias: Chargemode to Max boost now
    description: See automation Chargemode to Automatic
    triggers:
      - trigger: state
        entity_id:
          - input_boolean.chargemodemaxboostnow
        from: "off"
        to: "on"
    conditions: []
    actions:
      - action: input_select.select_option
        metadata: {}
        data:
          option: Max boost now
        target:
          entity_id: input_select.charge_mode
      - action: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id:
            - input_boolean.chargemodeautomatic
            - input_boolean.chargemodeoff
    mode: single


  - id: "1633010384766"
    alias: Chargemode to Off
    description: See automation Chargemode to Automatic
    triggers:
      - trigger: state
        entity_id:
          - input_boolean.chargemodeoff
        from: "off"
        to: "on"
    conditions: []
    actions:
      - action: input_select.select_option
        metadata: {}
        data:
          option: Stop
        target:
          entity_id: input_select.charge_mode
      - action: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id:
            - input_boolean.chargemodeautomatic
            - input_boolean.chargemodemaxboostnow
    mode: single
